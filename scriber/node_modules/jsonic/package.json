{
  "name": "jsonic",
  "version": "0.1.1",
  "description": "A JSON parser that isn't strict.",
  "main": "jsonic.js",
  "scripts": {
    "test": "jasmine-node ./test",
    "browser": "phantomjs test/run-jasmine.js test/jasmine.html",
    "build": "sh ./build.sh"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rjrodger/jsonic.git"
  },
  "keywords": [
    "json",
    "parser"
  ],
  "homepage": "https://github.com/rjrodger/jsonic",
  "author": {
    "name": "Richard Rodger",
    "url": "http://richardrodger.com"
  },
  "license": "MIT",
  "devDependencies": {
    "pegjs": "~0.7.0",
    "underscore": "~1.5.2",
    "jasmine-node": "~1.11.0"
  },
  "files": [
    "README.md",
    "LICENSE",
    "jsonic.js",
    "jsonic-min.js",
    "jsonic-min.map",
    "jsonic-parser.js",
    "jsonic-parser.pegjs"
  ],
  "readme": "# jsonic\n\n### A JSON parser for Node.js that isn't strict.\n\n\nA JSON parser that can parse \"bad\" JSON. Mostly, this is about avoiding the need to quote everything!\n\nStrict JSON requires you to do this:\n\n```JavaScript\n{ \"foo\":\"bar\", \"red\":1 }\n```\n\nThe JavaScript language itself is a little easier:\n\n```JavaScript\n{ foo:\"bar\", red:1, }\n```\n\nBut if you really want to be lazy, jsonic lets you say:\n\n```JavaScript\nfoo:bar, red:1,\n```\n\nSee below for the relaxed JSON rules.\n\n\n\nThis module is used by the [Seneca](http://senecajs.org) framework to provide an abbreviated command syntax.\n\n\n\n\n### Support\n\nIf you're using this module, feel free to contact me on twitter if you have any questions! :) [@rjrodger](http://twitter.com/rjrodger)\n\nCurrent Version: 0.1.0\n\nTested on: node 0.10.6\n\n\n### Quick example\n\n```JavaScript\nvar jsonic = require('jsonic')\n\n// parse a string into a JavaScript object\nvar obj = jsonic('foo:1, bar:zed')\n\n// prints { foo: '1', bar: 'zed' }\nconsole.dir( obj )\n\n```\n\n## Install\n\n```sh\nnpm install jsonic\n```\n\n\n# Relaxed Rules\n\nJSONIC format is just standard JSON, with a few rule relaxations:\n\n   * You don't need to quote property names: <code>{ foo:\"bar baz\", red:255 }</code>\n   * You don't need the top level braces: <code>foo:\"bar baz\", red:255</code>\n   * You don't need to quote strings with spaces: <code>foo:bar baz, red:255</code>\n   * You _do_ need to quote strings if they contain a comma or closing brace: <code>icky:\"_,_}_\"</code>\n   * You can use single quotes for strings: <code>Jules:'Cry \"Havoc,\" and let slip the dogs of war!'</code>\n   * You can have trailing commas: <code>foo:bar, red:255, </code>\n\n\n\n## How it Works\n\nThe parser uses [PEG.js](http://pegjs.majda.cz/) and is an extension of the example JSON parser included in that project.\n\n\n\n# Development\n\nYou'll need:\n\n```bash\nsudo npm install phantomjs@1.9.1-0 uglify-js -g\n```\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rjrodger/jsonic/issues"
  },
  "_id": "jsonic@0.1.1",
  "_shasum": "80435672a4a4e7928020c25a1c300d9c2fcd57d4",
  "_from": "jsonic@latest",
  "_resolved": "https://registry.npmjs.org/jsonic/-/jsonic-0.1.1.tgz"
}
